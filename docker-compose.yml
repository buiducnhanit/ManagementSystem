version: '3.8'

services:
  # 1. SQL Server Database Container
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "${SQL_SA_PASSWORD}"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - microservice_network

  # 2. Auth Service Container
  authservice:
    build:
      context: . 
      dockerfile: AuthService/WebAPI/Dockerfile 
    container_name: authservice
    env_file:
      - .env
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver;Database=AuthServiceDb;User Id=sa;Password=${SQL_SA_PASSWORD};TrustServerCertificate=True;"
      Jwt__Key: "${JWT_KEY}"
      Jwt__Issuer: "${JWT_ISSUER}"
      Jwt__Audience: "${JWT_AUDIENCE}"
      EmailSettings__ApiKey: "${EMAIL_API_KEY}"
      EmailSettings__SecretKey: "${EMAIL_SECRET_KEY}"
      EmailSettings__SenderEmail: "${EMAIL_SENDER_EMAIL}"
      EmailSettings__SenderName: "${EMAIL_SENDER_NAME}"
      Frontend__BaseUrl: "${FRONTEND_BASE_URL}"
      UserService__BaseUrl: "${USER_SERVICE_INTERNAL_URL}"
      ASPNETCORE_URLS: "http://+:80"
      ASPNETCORE_ENVIRONMENT: "${ASPNETCORE_ENVIRONMENT}"
    ports:
      - "5000:80"
    depends_on:
      - sqlserver
    networks:
      - microservice_network

  # 3. User Service Container
  userservice:
    build:
      context: .
      dockerfile: UserService/WebAPI/Dockerfile
    container_name: userservice
    env_file:
      - .env
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver;Database=UserServiceDb;User Id=sa;Password=${SQL_SA_PASSWORD};TrustServerCertificate=True;"
      Jwt__Key: "${JWT_KEY}"
      Jwt__Issuer: "${JWT_ISSUER}"
      Jwt__Audience: "${JWT_AUDIENCE}"
      AuthService__BaseUrl: "${AUTH_SERVICE_INTERNAL_URL}"
      ASPNETCORE_URLS: "http://+:80"
      ASPNETCORE_ENVIRONMENT: "${ASPNETCORE_ENVIRONMENT}"
    ports:
      - "5001:80"
    depends_on:
      - sqlserver
    networks:
      - microservice_network
      
  # 4. API Gateway Container
  apigateway:
    build:
      context: .
      dockerfile: ApiGateway/ApiGateway/Dockerfile
    container_name: apigateway
    env_file:
      - .env
    environment:
      Jwt__Key: "${JWT_KEY}"
      Jwt__Issuer: "${JWT_ISSUER}"
      Jwt__Audience: "${JWT_AUDIENCE}"
      ASPNETCORE_URLS: "http://+:80"
      ASPNETCORE_ENVIRONMENT: "${ASPNETCORE_ENVIRONMENT}"
    ports:
      - "7000:80"  
      - "7001:443" 
    depends_on:
      - authservice
      - userservice
    networks:
      - microservice_network

networks:
  microservice_network:
    driver: bridge 

volumes:
  sqlserver_data: {}